name: Local CI/CD Pipeline for SmartLocker

on:
  push:
    branches:
      - preprod
      - main
      - dev


jobs:
  # Préparation de l'environnement
  setup:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/willisback/smart-locker-ci:latest
      options: --user root
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3
  # 1. Linting
  lint:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/willisback/smart-locker-ci:latest
      options: --user root
    needs: [setup]
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3
      - name: 🧰 Install build dependencies
        run: rustup component add clippy
      - name: 🧹 Run Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  # 2. Formatage
  format:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/willisback/smart-locker-ci:latest
      options: --user root
    needs: [setup]
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3
      - name: 🧰 Install build dependencies
        run: rustup component add rustfmt
      - name: 🧹 Check formatting
        run: cargo fmt --all -- --check

  # 3. Build cross-platform
  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/willisback/smart-locker-ci:latest
      options: --user root
    needs: [setup]
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3

      - name: 🛠️ Build for Linux
        run: cargo build --release

      - name: 🛠️ Build for Windows
        run: |
          cargo build --release --target x86_64-pc-windows-gnu

      - name: 📦 Archive binaries
        run: |
          mkdir -p dist/linux dist/windows
          cp target/release/smart-locker dist/linux/
          tar -czf smartlocker_linux.tar.gz -C dist linux
          cp target/x86_64-pc-windows-gnu/release/smart-locker.exe dist/windows/
          zip -r smartlocker_windows.zip dist/windows

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            smartlocker_linux.tar.gz
            smartlocker_windows.zip

  # 4. Tests unitaires
  test:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/willisback/smart-locker-ci:latest
      options: --user root
    needs: [setup, lint, format, build]
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3
      - name: 🧪 Run tests
        run: |
          cargo run init
          cargo test --release --features disable_clipboard_tests -- --nocapture

  # 5 Documentation 
  docs:
    name: docs-online
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/willisback/smart-locker-ci:latest
      options: --user root
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3
      - name: 📚 Generate documentation online
        run: cargo doc --no-deps
      - name: 📤 Upload documentation
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: target/doc
      
  # 6. Release
  release:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/willisback/smart-locker-ci:latest
      options: --user root
    needs: [test, docs]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3

      - name: 🔐 Configure Git for OAuth
        run: |
          git config --global user.email "ci@smartlocker.local"
          git config --global user.name "SmartLocker CI"
          git config --global --add safe.directory /__w/smart-locker/smart-locker
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/WillIsback/smart-locker.git

      # Generate .deb and .rpm packages
      - name: 📦 Build .deb and .rpm packages
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/preprod'
        run: |
          cargo build --release
          strip -s target/release/smart-locker
          cargo deb --fast
          cargo generate-rpm

      # Dry-run pour dev
      - name: 🚀 Run cargo release (dry-run for dev)
        if: github.ref == 'refs/heads/dev'
        run: |
          cargo release rc --no-tag --no-push --no-publish --no-confirm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      # Pré-version pour preprod
      - name: 🚀 Run cargo release (pre-version for preprod)
        if: github.ref == 'refs/heads/preprod'
        run: |
          cargo release rc --execute --no-confirm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      # Release stable pour main
      - name: 🚀 Run cargo release (stable release for main)
        if: github.ref == 'refs/heads/main'
        run: | 
          cargo release patch --execute --no-confirm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      # - name: 🔑 Generate checksums and signatures
      #   run: |
      #     sha256sum dist/* > checksums.txt
      #     gpg --detach-sign --armor checksums.txt
          
      # - name: 📤 Upload checksums and signatures
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: checksums
      #     path: |
      #       checksums.txt
      #       checksums.txt.asc